---
import { getCollection } from 'astro:content';
import Main from '../layouts/Main.astro'
import Button from '../components/Button.astro';
import SectionHeader from '../components/SectionHeader.astro';
import { render } from 'astro:content';
import { BASE_URL, INQUIRE_LINK } from '../data/links';
import { get_surrounding_pkgs } from './InvestmentPackage.res.mjs'
import SiblingPackageNav, { NavDir } from '../components/SiblingPackageNav.astro';
import Card from '../components/Card.astro';

export enum PackageType {
  Maternity = "maternityPackages",
  Newborn = "newbornPackages",
  Milestone = "milestonePackages",
  Family = "familyPackages",
  Headshot = "headshotPackages",
}

const packageTypeToTuple: Record<PackageType, [string, string]> = {
  [PackageType.Maternity]: ["Maternity Packages", `${BASE_URL}/investment/maternity`],
  [PackageType.Newborn]: ["Newborn Packages", `${BASE_URL}/investment/newborn`],
  [PackageType.Milestone]: ["Milestone Packages", `${BASE_URL}/investment/milestone`],
  [PackageType.Family]: ["Family Packages", `${BASE_URL}/investment/family`],
  [PackageType.Headshot]: ["Headshot, Branding & Portrait Packages", `${BASE_URL}/investment/headshot`],
};

export interface Props {
  pkgType: PackageType,
  title: string,
}

let { pkgType, title } = Astro.props;

let packages = Object.values(packageTypeToTuple)
const pkg = packageTypeToTuple[pkgType];
let pkgs = get_surrounding_pkgs(pkg, packages)
 
const collection = (await getCollection(pkgType)).sort((a,b) => a.data.sortOrder - b.data.sortOrder);

const desktopDisplay = "md:grid grid-cols-[20vw_50vw_20vw] gap-2" 
const mobileDisplay = "flex justify-around items-center"
---
<style>
  li::marker {
    color: var(--color-pink);
  }
</style>
<Main title={`Magnolia Coasts Photography | ${title}`}>
  <div class={`self-center ${desktopDisplay} ${mobileDisplay}`}>
    <SiblingPackageNav text={pkgs[0][0]} href={pkgs[0][1]} direction={NavDir.Left} />
    <SectionHeader title={title} />
    <SiblingPackageNav text={pkgs[1][0]} href={pkgs[1][1]} direction={NavDir.Right} />
  </div>
  <div class="flex justify-center items-start flex-wrap w-full p-4">
    {collection.map(async pkg => {
      let { Content } = await render(pkg);
      return (
        <Card classes="w-full max-w-[400px] m-2">
          <h2 class="flex justify-center items-center mb-4 font-cormorant-garamond">{pkg.data.title}</h2>
          <Content />
          <ul class="flex flex-col justify-start items-start list-disc list-inside my-2 font-inter">
            {pkg.data.details.map((detail: string) => (
              <li class="text-sm my-[0.25rem] align-middle">{detail}</li>
            ))}
          </ul>
          <div class="flex justify-between items-center h-[62px]">
            <div class="class text-lg font-bold">${pkg.data.price || pkg.data.priceRange} + Tax</div>
            <a href={INQUIRE_LINK} target="_blank" class="w-4/10 h-3/4 flex items-center font-cormorant-garamond">
              <Button text="Inquire" color="Pink" variant="Default" />
            </a>
          </div>
        </Card>
      )
    })}
  </div>
</Main>
